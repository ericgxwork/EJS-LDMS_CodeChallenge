REM *****************************************************
REM Author:
REM Eric Salles
REM Date:
REM 01.11.2020
REM Version:
REM 2.0
REM Purpose:
REM Apply all relevant objects required for LDMS coding challenge
REM Specific requirements:
REM None
REM
REM
REM Note:
REM No storage clause provided. To be defined per environment.
REM Analyse tables using DBMS_STAT when Schema is known
REM 
REM
REM *****************************************************
PROMPT
PROMPT Applying all relevant objects required for LDMS coding challenge
PROMPT
REM
CREATE TABLE DEPARTMENTS
(
  DEPARTMENT_ID    NUMBER(5) CONSTRAINT DEPTS_ID_NN NOT NULL,
  DEPARTMENT_NAME  VARCHAR2(50 BYTE) CONSTRAINT DEPTS_NAME_NN NOT NULL,
  LOCATION_ID      VARCHAR2(50) CONSTRAINT DEPTS_LOC_ID_NN NOT NULL
)
LOGGING 
NOCOMPRESS 
NOCACHE;

COMMENT ON TABLE DEPARTMENTS IS 'DEPARTMENTS table that records details of DEPARTMENTS where employees work';

COMMENT ON COLUMN DEPARTMENTS.DEPARTMENT_ID IS 'Primary key column of DEPARTMENTS table to uniquely identify the department';

COMMENT ON COLUMN DEPARTMENTS.DEPARTMENT_NAME IS 'The name of the department. Mandatory column';

COMMENT ON COLUMN DEPARTMENTS.LOCATION_ID IS 'The physical location of the department. Mandatory column';


CREATE UNIQUE INDEX DEPT_ID_PK ON DEPARTMENTS
(DEPARTMENT_ID)
LOGGING;

ALTER TABLE DEPARTMENTS ADD (
  CONSTRAINT DEPT_ID_PK
  PRIMARY KEY
  (DEPARTMENT_ID)
  USING INDEX DEPT_ID_PK
  ENABLE VALIDATE);
REM
REM Add data to DEPARTMENTS
REM
SET DEFINE OFF;
REM
SET DEFINE OFF;
Insert into EJS.DEPARTMENTS
   (DEPARTMENT_ID, DEPARTMENT_NAME, LOCATION_ID)
 Values
   (1, 'Management', 'London');
Insert into EJS.DEPARTMENTS
   (DEPARTMENT_ID, DEPARTMENT_NAME, LOCATION_ID)
 Values
   (2, 'Engineering', 'Cardiff');
Insert into EJS.DEPARTMENTS
   (DEPARTMENT_ID, DEPARTMENT_NAME, LOCATION_ID)
 Values
   (3, 'Research & Development', 'Edinburgh');
Insert into EJS.DEPARTMENTS
   (DEPARTMENT_ID, DEPARTMENT_NAME, LOCATION_ID)
 Values
   (4, 'Sales', 'Belfast');
COMMIT;
REM
REM
REM
CREATE SEQUENCE SEQ_EMPLOYEE_ID
 START WITH     90011
 INCREMENT BY   1
 MAXVALUE 999999999
 NOCACHE
 NOCYCLE;
REM
CREATE TABLE EMPLOYEES
(
  EMPLOYEE_ID     NUMBER(10 ) DEFAULT SEQ_EMPLOYEE_ID.NEXTVAL CONSTRAINT EMP_ID_NN NOT NULL,
  EMPLOYEE_NAME   VARCHAR2(50 BYTE) CONSTRAINT EMP_NAME_NN NOT NULL,
  JOB_TITLE       VARCHAR2(50 BYTE) CONSTRAINT EMP_JOB_TITLE_NN NOT NULL,
  MANAGER_ID      NUMBER(10),
  DATE_HIRED      DATE CONSTRAINT EMP_DATE_HIRED_NN NOT NULL,
  SALARY          NUMBER(10) CONSTRAINT EMP_SALARY_NN NOT NULL,
  DEPARTMENT_ID   NUMBER(5) CONSTRAINTS EMP_DEPT_ID_NN NOT NULL
)
LOGGING 
NOCOMPRESS 
NOCACHE;

COMMENT ON TABLE EMPLOYEES IS 'EMPLOYEES table, records employees details';

COMMENT ON COLUMN EMPLOYEES.EMPLOYEE_ID IS 'Primary key of EMPLOYEES table';

COMMENT ON COLUMN EMPLOYEES.EMPLOYEE_NAME IS 'The name of the employee. Mandatory column';

COMMENT ON COLUMN EMPLOYEES.JOB_TITLE IS 'The job tilte of the employee. Mandatory column';

COMMENT ON COLUMN EMPLOYEES.MANAGER_ID IS 'The Manager id of the employee. Self referenced in the table';

COMMENT ON COLUMN EMPLOYEES.DATE_HIRED IS 'The Date when the employee was hired. Mandatory column.';

COMMENT ON COLUMN EMPLOYEES.SALARY IS 'The current Yearly salary of the employee. Must be greater or equal to zero (enforced by constraint emp_salary_min)';

COMMENT ON COLUMN EMPLOYEES.DEPARTMENT_ID IS 'The department id where the employee works. Mandatory column.';

CREATE UNIQUE INDEX EMP_EMP_ID_PK ON EMPLOYEES
(EMPLOYEE_ID)
LOGGING;

ALTER TABLE EMPLOYEES ADD 
CONSTRAINT EMP_EMP_ID_PK
  PRIMARY KEY
  (EMPLOYEE_ID)
  USING INDEX EMP_EMP_ID_PK
  ENABLE VALIDATE;

ALTER TABLE EMPLOYEES ADD 
  CONSTRAINT EMP_SALARY_MIN
  CHECK (salary >= 0)
  ENABLE VALIDATE;
  
CREATE INDEX EMP_DEPARTMENT_IX ON EMPLOYEES
(DEPARTMENT_ID)
LOGGING;

CREATE INDEX EMP_MANAGER_IX ON EMPLOYEES
(MANAGER_ID)
LOGGING;

CREATE INDEX EMP_NAME_IX ON EMPLOYEES
(EMPLOYEE_NAME)
LOGGING;

ALTER TABLE EMPLOYEES ADD 
  CONSTRAINT EMP_DEPT_FK 
  FOREIGN KEY (DEPARTMENT_ID) 
  REFERENCES DEPARTMENTS (DEPARTMENT_ID)
  ENABLE VALIDATE;
  
ALTER TABLE EMPLOYEES ADD 
  CONSTRAINT EMP_MANAGER_FK 
  FOREIGN KEY (MANAGER_ID) 
  REFERENCES EMPLOYEES (EMPLOYEE_ID)
  ENABLE VALIDATE;
REM
REM
REM Add data to EMPLOYEES
REM
SET DEFINE OFF;
Insert into EMPLOYEES 
   (EMPLOYEE_ID, EMPLOYEE_NAME, JOB_TITLE, DATE_HIRED, SALARY, 
    DEPARTMENT_ID)
 Values
   (90001, 'John Smith', 'CEO', TO_DATE('01/01/1995', 'DD/MM/YYYY'), 100000, 
    1);
Insert into EMPLOYEES 
   (EMPLOYEE_ID, EMPLOYEE_NAME, JOB_TITLE, MANAGER_ID, DATE_HIRED, 
    SALARY, DEPARTMENT_ID)
 Values
   (90002, 'Jimmy Willis', 'Manager', 90001, TO_DATE('23/09/2003', 'DD/MM/YYYY'), 
    52500, 4);
Insert into EMPLOYEES 
   (EMPLOYEE_ID, EMPLOYEE_NAME, JOB_TITLE, MANAGER_ID, DATE_HIRED, 
    SALARY, DEPARTMENT_ID)
 Values
   (90006, 'Sarah Phelps', 'Manager', 90001, TO_DATE('21/03/2015', 'DD/MM/YYYY'), 
    45000, 2);
Insert into EMPLOYEES 
   (EMPLOYEE_ID, EMPLOYEE_NAME, JOB_TITLE, MANAGER_ID, DATE_HIRED, 
    SALARY, DEPARTMENT_ID)
 Values
   (90009, 'Gus Jones', 'Manager', 90001, TO_DATE('15/05/2018', 'DD/MM/YYYY'), 
    50000, 3);
Insert into EMPLOYEES 
   (EMPLOYEE_ID, EMPLOYEE_NAME, JOB_TITLE, MANAGER_ID, DATE_HIRED, 
    SALARY, DEPARTMENT_ID)
 Values
   (90010, 'Mildred Hall', 'Secretary', 90001, TO_DATE('12/10/1996', 'DD/MM/YYYY'), 
    35000, 1);
Insert into EMPLOYEES 
   (EMPLOYEE_ID, EMPLOYEE_NAME, JOB_TITLE, MANAGER_ID, DATE_HIRED, 
    SALARY, DEPARTMENT_ID)
 Values
   (90003, 'Roxy Jones', 'Salesperson', 90002, TO_DATE('11/02/2017', 'DD/MM/YYYY'), 
    35000, 4);
Insert into EMPLOYEES 
   (EMPLOYEE_ID, EMPLOYEE_NAME, JOB_TITLE, MANAGER_ID, DATE_HIRED, 
    SALARY, DEPARTMENT_ID)
 Values
   (90004, 'Selwyn Field', 'Salesperson', 90003, TO_DATE('20/05/2015', 'DD/MM/YYYY'), 
    32000, 4);
Insert into EMPLOYEES 
   (EMPLOYEE_ID, EMPLOYEE_NAME, JOB_TITLE, MANAGER_ID, DATE_HIRED, 
    SALARY, DEPARTMENT_ID)
 Values
   (90005, 'David Hallett', 'Engineer', 90006, TO_DATE('17/04/2018', 'DD/MM/YYYY'), 
    40000, 2);
Insert into EMPLOYEES 
   (EMPLOYEE_ID, EMPLOYEE_NAME, JOB_TITLE, MANAGER_ID, DATE_HIRED, 
    SALARY, DEPARTMENT_ID)
 Values
   (90007, 'Louise Harper', 'Engineer', 90006, TO_DATE('01/01/2013', 'DD/MM/YYYY'), 
    47000, 2);
Insert into EMPLOYEES 
   (EMPLOYEE_ID, EMPLOYEE_NAME, JOB_TITLE, MANAGER_ID, DATE_HIRED, 
    SALARY, DEPARTMENT_ID)
 Values
   (90008, 'Tina Hart', 'Engineer', 90009, TO_DATE('28/07/2014', 'DD/MM/YYYY'), 
    45000, 3);
COMMIT;  
REM
REM Install pkg_employee_maintenance
REM 
@@PKG0001.SQL
REM
PROMPT Compile invalid objects
@@COMPILE
REM 
REM Note Analyse tables using DBMS_STAT when Schema is known
REM
PROMPT Release applied


